services:
  # ====== The POSTGRESQL Database Service ======
  # PostgreSQL Master
  postgres-master:
    image: postgres:16
    container_name: postgres-master
    ports:
      - "5432:5432"
    environment:
      # read from the .env file
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - ./postgres-master-data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command:
      - postgres -c 'wal_level=replica' -c 'max_wal_senders=10' -c 'hot_standby=on'
    networks:
      - storage_network

  # PostgreSQL Slave 1
  postgres-slave-1:
    image: postgres:16
    container_name: postgres-slave-1
    ports:
      - "5433:5432"
    environment:
      # read from the .env file
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - ./postgres-slave-1-data:/var/lib/postgresql/data
    depends_on:
      - postgres-master
    command: >
      sh -c '
        echo "standby_mode = 'on'" > /var/lib/postgresql/data/postgresql.conf &&
        echo "primary_conninfo = 'host=postgres-master port=5432 user=replication_user password=password application_name=postgres-slave-1'" >> /var/lib/postgresql/data/postgresql.conf &&
        echo "hot_standby = 'on'" >> /var/lib/postgresql/data/postgresql.conf &&
        echo "recovery_target_timeline = 'latest'" >> /var/lib/postgresql/data/postgresql.conf &&
        pg_basebackup -h postgres-master -p 5432 -U replication_user -D /var/lib/postgresql/data -P -Xs -R &&
        postgres
      '
    networks:
      - storage_network

  # PostgreSQL Slave 2
  postgres-slave-2:
    image: postgres:16
    container_name: postgres-slave-2
    ports:
      - "5434:5432"
    environment:
      # read from the .env file
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    volumes:
      - ./postgres-slave-2-data:/var/lib/postgresql/data
    depends_on:
      - postgres-master
    command: >
      sh -c '
        echo "standby_mode = 'on'" > /var/lib/postgresql/data/postgresql.conf &&
        echo "primary_conninfo = 'host=postgres-master port=5432 user=replication_user password=password application_name=postgres-slave-2'" >> /var/lib/postgresql/data/postgresql.conf &&
        echo "hot_standby = 'on'" >> /var/lib/postgresql/data/postgresql.conf &&
        echo "recovery_target_timeline = 'latest'" >> /var/lib/postgresql/data/postgresql.conf &&
        pg_basebackup -h postgres-master -p 5432 -U replication_user -D /var/lib/postgresql/data -P -Xs -R &&
        postgres
      '
    networks:
      - storage_network


  # ====== The APP Service ======
  # app-1
  app-1:
    build: .
    container_name: app-1
    environment:
      MASTER_DB_HOST: postgres-master
      SLAVE_DB_HOST: postgres-slave-1
      DB_NAME: ${PG_DB}
      DB_USER: ${PG_USER}
      DB_PASSWORD: ${PG_PASSWORD}
    depends_on:
      - postgres-master
      - postgres-slave-1
    networks:
      - storage_network

  # app-2
  app-2:
    build: .
    container_name: app-2
    environment:
      MASTER_DB_HOST: postgres-master
      SLAVE_DB_HOST: postgres-slave-2
      DB_NAME: ${PG_DB}
      DB_USER: ${PG_USER}
      DB_PASSWORD: ${PG_PASSWORD}
    depends_on:
      - postgres-master
      - postgres-slave-2
    networks:
      - storage_network
      
  # app-3
  app-3:
    build: .
    container_name: app-3
    environment:
      MASTER_DB_HOST: postgres-master
      SLAVE_DB_HOST: postgres-slave-1
      DB_NAME: ${PG_DB}
      DB_USER: ${PG_USER}
      DB_PASSWORD: ${PG_PASSWORD}
    depends_on:
      - postgres-master
      - postgres-slave-1
    networks:
      - storage_network

# network so that the containers can communicate with each other.
networks:
  storage_network:
    driver: bridge

volumes:
  postgres-master-data:
    driver: local
  postgres-slave-1-data:
    driver: local
  postgres-slave-2-data:
    driver: local